rse <- unlist(lapply(all_hts, `[[`, "rse"))
mod <- unlist(lapply(all_hts, `[[`, "mod"))
hts <- unlist(lapply(all_hts, `[[`, "H"))
data <- unlist(lapply(all_hts, `[[`, "dat"))
dummy_plots_trees2 <- data.frame(do.call("rbind", (lapply(all_hts, `[[`, "dat"))))
length(hts)
dummy_plots_trees2$H <- hts
# clean the ID
# At the species level, we leave them as separate species ?
dummy_plots_trees2$Species <-  dummy_plots_trees2$ID
dummy_plots_trees2 <- dummy_plots_trees2 %>% separate(ID, c("Genus", "Spp"))
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Species <- gsub(" ", "_", dummy_plots_trees2$Species)
#dummy_plots_trees3 <- dummy_plots_trees2[dummy_plots_trees2$Genus!="Liane",]
#get wood density
WdDen <- getWoodDensity(genus = dummy_plots_trees2$Genus,
species = dummy_plots_trees2$Species,
stand = dummy_plots_trees2$Project_Plot)
dummy_plots_trees2$meanWD <- WdDen$meanWD
dummy_plots_trees2$sdWD <- WdDen$sdWD
#calculate AGB for trees
dummy_plots_trees2$AGBtree <- computeAGB(D = dummy_plots_trees2$dbh, WD = dummy_plots_trees2$meanWD, H = dummy_plots_trees2$H)
#for 6 plots
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
agb = sum(AGBtree))
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all$Forest_Type <- dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
dummy_plots_all$BA <- ((dummy_plots_all$dbh/200)^2)*pi
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
ba_all <- dummy_plots_all %>%
drop_na(BA)%>%
group_by(Project_Plot)%>%
dplyr::summarise( BA = sum(BA))
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
# also calculate basal area
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all <- merge(structure_all, ba_all, by="Project_Plot")
structure_all$Forest_Type <- c("DF", "DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","IF","IF","IF","IF","IF","IF")
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n(),
abundance_sm_sd = sd(n()))
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_m = n())
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_lg = n())
#only small trees
BA_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(BA_sm = sum(BA),
BA_sm_sd = sd(BA))
#only medium trees
BA_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(BA_m = sum(BA),
BA_m_sd = sd(BA))
#only lg trees
BA_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(BA_lg = sum(BA),
BA_lg_sd = sd(BA))
structure_all <- merge(structure_all, abundance_sm, by="Project_Plot")
structure_all <- merge(structure_all, abundance_m, by="Project_Plot")
structure_all <- merge(structure_all, abundance_lg, by="Project_Plot")
structure_all <- merge(structure_all, BA_sm, by="Project_Plot")
structure_all <- merge(structure_all, BA_m, by="Project_Plot")
structure_all <- merge(structure_all, BA_lg, by="Project_Plot")
ggplot(data= dummy_plots_all, aes(x= height))+
geom_histogram()+
theme_classic()
plot_abundance
dummy_plots_trees2
cleaner_plots <- read.csv("~/Documents/GitHub/BASS/Cleaner_Data_for_Camille.csv")
dim(cleaner_plots)
colnames(cleaner_plots)
cleaner_plots$ID[cleaner_plots$ID=="#N/A"] <- NA
cleaner_plots$ID[cleaner_plots$ID==""] <- NA
cleaner_plots <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots <- cleaner_plots[cleaner_plots$Height..meters. >= 1.5,]
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
cleaner_plots
cleaner_plots <- read.csv("~/Documents/GitHub/BASS/Cleaner_Data_for_Camille.csv")
cleaner_plots
dim(cleaner_plots)
colnames(cleaner_plots)
cleaner_plots$ID[cleaner_plots$ID=="#N/A"] <- NA
cleaner_plots$ID[cleaner_plots$ID==""] <- NA
cleaner_plots
cleaner_plots <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots
cleaner_plots <- cleaner_plots[cleaner_plots$Height..meters. >= 1.5,]
cleaner_plots
cleaner_plots <- read.csv("~/Documents/GitHub/BASS/Cleaner_Data_for_Camille.csv")
dim(cleaner_plots)
colnames(cleaner_plots)
cleaner_plots$ID[cleaner_plots$ID=="#N/A"] <- NA
cleaner_plots$ID[cleaner_plots$ID==""] <- NA
cleaner_plots
!is.na(cleaner_plots$ID)
cleaner_plots2 <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots2
cleaner_plots2 <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots2
cleaner_plots<- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots
cleaner_plots <- cleaner_plots[cleaner_plots$Height_m >= 1.5,]
cleaner_plots
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
unique(cleaner_plots$Veg_Type)
colnames(cleaner_plots)
cleaner_plots
cleaner_plots <- read.csv("~/Documents/GitHub/BASS/Cleaner_Data_for_Camille.csv")
dim(cleaner_plots)
colnames(cleaner_plots)
cleaner_plots$ID[cleaner_plots$ID=="#N/A"] <- NA
cleaner_plots$ID[cleaner_plots$ID==""] <- NA
cleaner_plots <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots <- cleaner_plots[cleaner_plots$Height..meters. >= 1.5,]
cleaner_plots
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(cleaner_plots_trees)[4]<- "dbh"
names(cleaner_plots_trees)[5]<- "height"
cleaner_plots_trees
unique(cleaner_plots$Type_Field)
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field == "Tree"|Type_Field == "Sapling"|Type_Field == "Seedling")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(cleaner_plots_trees)[4]<- "dbh"
names(cleaner_plots_trees)[5]<- "height"
View(cleaner_plots_trees )
#create liana data
cleaner_plots_liana <- cleaner_plots %>%
filter(Type_Field == "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(cleaner_plots_liana)[4]<- "dbh"
names(cleaner_plots_liana)[5]<- "height"
ggplot(data = cleaner_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = cleaner_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = cleaner_plots_trees, aes(x=height))+
geom_histogram()
ggplot(data = cleaner_plots_trees, aes(x=height))+
geom_histogram()
summary(cleaner_plots_trees)
unique(cleaner_plots$Project_Plot)
cleaner_plots_trees <- cleaner_plots_trees[cleaner_plots_trees$Project_Plot!="_",]
cleaner_plots_trees
hplots <- unique(cleaner_plots_trees$Project_Plot)
output <- list()
height_no <- cleaner_plots_trees %>%
drop_na(height)%>%
group_by(Project_Plot)%>%
summarise(n_height=length(height))
Hcalc <- function(ddat, hdat, x){
print(x)
hmod <- data.frame(modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = NULL))
min_pick <- min(hmod$RSE, na.rm = T)
bm <- hmod$method[hmod$RSE == min_pick]
best_mod <- modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = bm)
predHt <- retrieveH(D = ddat$dbh, model = best_mod)
list(rsq = best_mod$R.squared, rse = best_mod$RSE, mod = best_mod$method,
H = predHt$H, dat = ddat)
}
all_hts <- lapply(1:length(unique(cleaner_plots_trees$Project_Plot)), function(x) output[[x]] = Hcalc(ddat =
cleaner_plots_trees[cleaner_plots_trees$Project_Plot == hplots[[x]], ],
hdat = cleaner_plots_trees[cleaner_plots_trees$Project_Plot == hplots[[x]],],
x))
rsq <- unlist(lapply(all_hts, `[[`, "rsq"))
rse <- unlist(lapply(all_hts, `[[`, "rse"))
mod <- unlist(lapply(all_hts, `[[`, "mod"))
hts <- unlist(lapply(all_hts, `[[`, "H"))
data <- unlist(lapply(all_hts, `[[`, "dat"))
cleaner_plots_trees2 <- data.frame(do.call("rbind", (lapply(all_hts, `[[`, "dat"))))
length(hts)
cleaner_plots_trees2$H <- hts
cleaner_plots_trees2
cleaner_plots_trees2$Species <-  cleaner_plots_trees2$ID
cleaner_plots_trees2 <- cleaner_plots_trees2 %>% separate(ID, c("Genus", "Spp"))
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Genus=="ECH"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Genus=="ECH"] <- NA
cleaner_plots_trees2$Genus[cleaner_plots_trees2$Genus=="ECH"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="sp"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="sp"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Spp=="sp"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Genus=="Morpho"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Genus=="Morpho"] <- NA
cleaner_plots_trees2$Genus[cleaner_plots_trees2$Genus=="Morpho"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="1"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Spp=="1"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="3"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Spp=="3"] <- NA
cleaner_plots_trees2$Species <- gsub(" ", "_", cleaner_plots_trees2$Species)
#cleaner_plots_trees3 <- cleaner_plots_trees2[cleaner_plots_trees2$Genus!="Liane",]
#get wood density
WdDen <- getWoodDensity(genus = cleaner_plots_trees2$Genus,
species = cleaner_plots_trees2$Species,
stand = cleaner_plots_trees2$Project_Plot)
cleaner_plots_trees2$meanWD <- WdDen$meanWD
cleaner_plots_trees2$sdWD <- WdDen$sdWD
#calculate AGB for trees
cleaner_plots_trees2$AGBtree <- computeAGB(D = cleaner_plots_trees2$dbh, WD = cleaner_plots_trees2$meanWD, H = cleaner_plots_trees2$H)
cleaner_plots_trees2$AGBtree
cleaner_plots_trees2
hill_dat <- data.frame(xtabs(~Project_Plot + Genus, data = cleaner_plots_trees2))
hill_dat2 <- hill_dat %>%
pivot_wider(names_from = "Genus", values_from = "Freq")
hill_dat
hill_dat2 <- hill_dat %>%
pivot_wider(names_from = "Genus", values_from = "Freq")
cleaner_plots_trees2
hill_dat2 <- hill_dat %>%
drop_na(Genus)%>%
pivot_wider(names_from = "Genus", values_from = "Freq")
hill_dat2 <- hill_dat %>%
drop_na(Genus)
hill_dat2
hill_dat$Genus[hill_dat$Genus==""]<-NA
hill_dat2 <- hill_dat %>%
drop_na(Genus)%>%
pivot_wider(names_from = "Genus", values_from = "Freq")
class(hill_dat2)
hill_dat2_list <- as.list(hill_dat2)
hill_dat3 <- hill_dat %>%
pivot_wider(names_from = "Project_Plot", values_from = "Freq")
hill_dat4 <- hill_dat3[-c(0,1)]
hill_dat4_list <- as.list(hill_dat4)
hill <- iNEXT(hill_dat4_list, q = c(0,1,2), datatype = "abundance")
hill <- as.data.frame(hill[[3]])
hill2 <- hill %>%
select(Site, Diversity, Observed)%>%
pivot_wider(names_from = "Diversity", values_from = "Observed")
colnames(hill2)[1] <- "Project_Plot"
summary_stats <- merge(hill2, plot_abundance, by="Project_Plot")
colnames(summary_stats)[2] <- "Genus_Richness"
colnames(summary_stats)[3] <- "Shannon_Diversity"
colnames(summary_stats)[4] <- "Simpson_Diversity"
summary_stats <- summary_stats[-1,]
summary_stats$Distance <- c(21.23328,10.3114,10.48211,26.05005,25.86999,40.83798)
summary_stats
unique(hill_dat2$Project_Plot)
unique(cleaner_plots2$Proj.Plot)
unique(cleaner_plots_trees2$Project_Plot)
cleaner_plots <- read.csv("~/Documents/GitHub/BASS/Cleaner_Data_for_Camille.csv")
dim(cleaner_plots)
colnames(cleaner_plots)
cleaner_plots$ID[cleaner_plots$ID=="#N/A"] <- NA
cleaner_plots$ID[cleaner_plots$ID==""] <- NA
cleaner_plots <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots <- cleaner_plots[cleaner_plots$Height..meters. >= 1.5,]
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field == "Tree"|Type_Field == "Sapling"|Type_Field == "Seedling")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
unique(cleaner_plots_trees$Project_Plot)
View(cleaner_plots)
unique(cleaner_plots$Type_Field)
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field =! "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
dim(cleaner_plots)
colnames(cleaner_plots)
cleaner_plots$ID[cleaner_plots$ID=="#N/A"] <- NA
cleaner_plots$ID[cleaner_plots$ID==""] <- NA
cleaner_plots <- cleaner_plots[!is.na(cleaner_plots$ID),]
cleaner_plots <- cleaner_plots[cleaner_plots$Height..meters. >= 1.5,]
#create df for just trees
cleaner_plots_trees <- cleaner_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(cleaner_plots_trees)[4]<- "dbh"
names(cleaner_plots_trees)[5]<- "height"
#create liana data
cleaner_plots_liana <- cleaner_plots %>%
filter(Type_Field == "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(cleaner_plots_liana)[4]<- "dbh"
names(cleaner_plots_liana)[5]<- "height"
#visually explore data
ggplot(data = cleaner_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = cleaner_plots_trees, aes(x=height))+
geom_histogram()
summary(cleaner_plots_trees)
unique(cleaner_plots$Project_Plot)
cleaner_plots_trees <- cleaner_plots_trees[cleaner_plots_trees$Project_Plot!="_",]
hplots <- unique(cleaner_plots_trees$Project_Plot)
output <- list()
height_no <- cleaner_plots_trees %>%
drop_na(height)%>%
group_by(Project_Plot)%>%
summarise(n_height=length(height))
Hcalc <- function(ddat, hdat, x){
print(x)
hmod <- data.frame(modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = NULL))
min_pick <- min(hmod$RSE, na.rm = T)
bm <- hmod$method[hmod$RSE == min_pick]
best_mod <- modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = bm)
predHt <- retrieveH(D = ddat$dbh, model = best_mod)
list(rsq = best_mod$R.squared, rse = best_mod$RSE, mod = best_mod$method,
H = predHt$H, dat = ddat)
}
all_hts <- lapply(1:length(unique(cleaner_plots_trees$Project_Plot)), function(x) output[[x]] = Hcalc(ddat =
cleaner_plots_trees[cleaner_plots_trees$Project_Plot == hplots[[x]], ],
hdat = cleaner_plots_trees[cleaner_plots_trees$Project_Plot == hplots[[x]],],
x))
rsq <- unlist(lapply(all_hts, `[[`, "rsq"))
rse <- unlist(lapply(all_hts, `[[`, "rse"))
mod <- unlist(lapply(all_hts, `[[`, "mod"))
hts <- unlist(lapply(all_hts, `[[`, "H"))
data <- unlist(lapply(all_hts, `[[`, "dat"))
cleaner_plots_trees2 <- data.frame(do.call("rbind", (lapply(all_hts, `[[`, "dat"))))
length(hts)
cleaner_plots_trees2$H <- hts
# clean the ID
# At the species level, we leave them as separate species ?
cleaner_plots_trees2$Species <-  cleaner_plots_trees2$ID
cleaner_plots_trees2 <- cleaner_plots_trees2 %>% separate(ID, c("Genus", "Spp"))
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Genus=="ECH"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Genus=="ECH"] <- NA
cleaner_plots_trees2$Genus[cleaner_plots_trees2$Genus=="ECH"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="sp"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="sp"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Spp=="sp"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Genus=="Morpho"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Genus=="Morpho"] <- NA
cleaner_plots_trees2$Genus[cleaner_plots_trees2$Genus=="Morpho"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="1"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Spp=="1"] <- NA
cleaner_plots_trees2$Species[cleaner_plots_trees2$Spp=="3"] <- NA
cleaner_plots_trees2$Spp[cleaner_plots_trees2$Spp=="3"] <- NA
cleaner_plots_trees2$Species <- gsub(" ", "_", cleaner_plots_trees2$Species)
#cleaner_plots_trees3 <- cleaner_plots_trees2[cleaner_plots_trees2$Genus!="Liane",]
#get wood density
WdDen <- getWoodDensity(genus = cleaner_plots_trees2$Genus,
species = cleaner_plots_trees2$Species,
stand = cleaner_plots_trees2$Project_Plot)
cleaner_plots_trees2$meanWD <- WdDen$meanWD
cleaner_plots_trees2$sdWD <- WdDen$sdWD
#calculate AGB for trees
cleaner_plots_trees2$AGBtree <- computeAGB(D = cleaner_plots_trees2$dbh, WD = cleaner_plots_trees2$meanWD, H = cleaner_plots_trees2$H)
hill_dat <- data.frame(xtabs(~Project_Plot + Genus, data = cleaner_plots_trees2))
hill_dat$Genus[hill_dat$Genus==""]<-NA
hill_dat2 <- hill_dat %>%
drop_na(Genus)%>%
pivot_wider(names_from = "Genus", values_from = "Freq")
class(hill_dat2)
hill_dat2_list <- as.list(hill_dat2)
hill_dat3 <- hill_dat %>%
pivot_wider(names_from = "Project_Plot", values_from = "Freq")
hill_dat4 <- hill_dat3[-c(0,1)]
hill_dat4_list <- as.list(hill_dat4)
hill <- iNEXT(hill_dat4_list, q = c(0,1,2), datatype = "abundance")
hill <- as.data.frame(hill[[3]])
hill2 <- hill %>%
select(Site, Diversity, Observed)%>%
pivot_wider(names_from = "Diversity", values_from = "Observed")
colnames(hill2)[1] <- "Project_Plot"
summary_stats <- merge(hill2, plot_abundance, by="Project_Plot")
colnames(summary_stats)[2] <- "Genus_Richness"
colnames(summary_stats)[3] <- "Shannon_Diversity"
colnames(summary_stats)[4] <- "Simpson_Diversity"
summary_stats <- summary_stats[-1,]
summary_stats$Distance <- c(21.23328,10.3114,10.48211,26.05005,25.86999,40.83798)
cor.test(summary_stats$Distance, summary_stats$Shannon_Diversity)
cor.test(summary_stats$Distance, summary_stats$agb)
cor.test(summary_stats$Distance, summary_stats$Genus_Richness)
agb_plot <- ggplot(data=summary_stats, aes(x=Distance, y=agb))+
geom_point()+
theme_classic()+
ylab("AGB (Mg/Plot)")+
xlab("Distance From Makokou (Km)")+
annotate(geom="text", x=37, y=13000, label="cor = -0.734 , p = 0.096",
color="forestgreen")+
geom_smooth(method="lm", se=FALSE, color="forestgreen")
diversity_plot <- ggplot(data=summary_stats, aes(x=Distance, y=Shannon_Diversity))+
geom_point()+
theme_classic()+
ylab("Shannon's Genus Diversity")+
xlab("Distance From Makokou (Km)")+
annotate(geom="text", x=37, y=32, label="No Relationship",
color="forestgreen")
diversity_plot <- ggarrange(agb_plot, diversity_plot, labels=c("a", "b"), nrow=2)
cor.test(summary_stats$Distance, summary_stats$Shannon_Diversity)
cor.test(summary_stats$Distance, summary_stats$agb)
agb_plot <- ggplot(data=summary_stats, aes(x=Distance, y=agb))+
geom_point()+
theme_classic()+
ylab("AGB (Mg/Plot)")+
xlab("Distance From Makokou (Km)")+
annotate(geom="text", x=37, y=13000, label="cor = -0.735 , p = 0.096",
color="forestgreen")+
geom_smooth(method="lm", se=FALSE, color="forestgreen")
diversity_plot <- ggplot(data=summary_stats, aes(x=Distance, y=Shannon_Diversity))+
geom_point()+
theme_classic()+
ylab("Shannon's Genus Diversity")+
xlab("Distance From Makokou (Km)")+
annotate(geom="text", x=37, y=32, label="No Relationship",
color="forestgreen")
diversity_plot <- ggarrange(agb_plot, diversity_plot, labels=c("a", "b"), nrow=2)
diversity_plot
dbh_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanDBH))+
geom_boxplot(fill = c("darkorange3","forestgreen"))+
ylab("DBH (cm)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
library(ggpubr)
Structure_plot <- ggarrange(abundance, basal_area,height_plot, dbh_plot, labels = c("a", "b", "c", "d"), common.legend = T)
Structure_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot(fill = c("darkorange3","forestgreen"))+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme_classic(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot(fill = c("darkorange3","forestgreen"))+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme_classic()+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
dbh_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanDBH))+
geom_boxplot(fill = c("darkorange3","forestgreen"))+
ylab("DBH (cm)")+
xlab("Forest Type")+
theme_classic()+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
library(ggpubr)
Structure_plot <- ggarrange(abundance, basal_area,height_plot, dbh_plot, labels = c("a", "b", "c", "d"), common.legend = T)
Structure_plot

ggplot(data = dummy_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = dummy_plots_trees, aes(x=height))+
geom_histogram()
summary(dummy_plots_trees)
unique(dummy_plots_trees$Project_Plot)
dummy_plots_trees <- dummy_plots_trees[dummy_plots_trees$Project_Plot!="_",]
hplots <- unique(dummy_plots_trees$Project_Plot)
output <- list()
height_no <- dummy_plots_trees %>%
drop_na(height)%>%
group_by(Project_Plot)%>%
summarise(n_height=length(height))
Hcalc <- function(ddat, hdat, x){
print(x)
hmod <- data.frame(modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = NULL))
min_pick <- min(hmod$RSE, na.rm = T)
bm <- hmod$method[hmod$RSE == min_pick]
best_mod <- modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = bm)
predHt <- retrieveH(D = ddat$dbh, model = best_mod)
list(rsq = best_mod$R.squared, rse = best_mod$RSE, mod = best_mod$method,
H = predHt$H, dat = ddat)
}
all_hts <- lapply(1:length(unique(dummy_plots_trees$Project_Plot)), function(x) output[[x]] = Hcalc(ddat =
dummy_plots_trees[dummy_plots_trees$Project_Plot == hplots[[x]], ],
hdat = dummy_plots_trees[dummy_plots_trees$Project_Plot == hplots[[x]],],
x))
rsq <- unlist(lapply(all_hts, `[[`, "rsq"))
rse <- unlist(lapply(all_hts, `[[`, "rse"))
mod <- unlist(lapply(all_hts, `[[`, "mod"))
hts <- unlist(lapply(all_hts, `[[`, "H"))
data <- unlist(lapply(all_hts, `[[`, "dat"))
dummy_plots_trees2 <- data.frame(do.call("rbind", (lapply(all_hts, `[[`, "dat"))))
length(hts)
dummy_plots_trees2$H <- hts
# clean the ID
dummy_plots_trees2$Species <-  dummy_plots_trees2$ID
dummy_plots_trees2 <- dummy_plots_trees2 %>% separate(ID, c("Genus", "Spp"))
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Species <- gsub(" ", "_", dummy_plots_trees2$Species)
#dummy_plots_trees3 <- dummy_plots_trees2[dummy_plots_trees2$Genus!="Liane",]
#get wood density
WdDen <- getWoodDensity(genus = dummy_plots_trees2$Genus,
species = dummy_plots_trees2$Species,
stand = dummy_plots_trees2$Project_Plot)
dummy_plots_trees2$meanWD <- WdDen$meanWD
dummy_plots_trees2$sdWD <- WdDen$sdWD
#calculate AGB for trees
dummy_plots_trees2$AGBtree <- computeAGB(D = dummy_plots_trees2$dbh, WD = dummy_plots_trees2$meanWD, H = dummy_plots_trees2$H)
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
mean_agb = mean(AGBtree))
summary_stats
dummy_plots
unique(dummy_plots$Project_Plot)
unique(dummy_plots$Project_Plot)
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())%>%
drop_na(dbh, H)%>%
dplyr::summarise(mean_dbh = mean(dbh),
mean_height = mean(H))
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())%>%
drop_na(dbh, H)%>%
dplyr::summarise(mean_dbh = mean(dbh),
mean_height = mean(H))
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
plot_all
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())%>%
drop_na(dbh, height)
dummy_plots_all
plot_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())%>%
drop_na(dbh, height)
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())%>%
drop_na(dbh, height)
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
structure_all
abundance_all
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
abundance_all
dummy_plots_all
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all$Forest_Type <- dummy_plots_all$Project
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., Forest_Type)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all
structure_all$Forest_Type <- c("DF", "DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","IF","IF","IF","IF","IF","IF")
structure_all
bioclim.pca <- princomp(bioclim_data[,-c(1:2,22:40)])
# print shows you the eigenvalues;
print(bioclim.pca)
# summary does the same but adds the raw and cumulative variance:
summary(bioclim.pca)
ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()
ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()
ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Tyle")
ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
structure_all$Forest_Type[structure_all$Forest_Type=="DF"] <- "Defaunated"
structure_all$Forest_Type[structure_all$Forest_Type=="IF"] <- "Intact"
ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
height <- ggplot(data=structure_all, aes(x= Forest_Type, y= meanHeight))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
height
dbh <- ggplot(data=structure_all, aes(x= Forest_Type, y= meanDBH))+
geom_boxplot()+
theme_classic()+
ylab("Mean DBH")+
xlab("Forest Type")
dbh
ggarrange(abundance, height, dbh, labels = "a", "b", "c")
??ggarrange
??ggarange
install.packages("ggpubr")
# load packages
pacman::p_load(ggplot2, knitr, BIOMASS, dplyr, data.table, gdata,
rvest, rlang, purrr, tidyverse, iNEXT, ggpubr)
ggarrange(abundance, height, dbh, labels = "a", "b", "c")
structure_all$Forest_Type[structure_all$Forest_Type=="DF"] <- "Defaunated"
structure_all$Forest_Type[structure_all$Forest_Type=="IF"] <- "Intact"
abundance_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
height_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= meanHeight))+
geom_boxplot()+
theme_classic()+
ylab("Mean Height")+
xlab("Forest Type")
dbh_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= meanDBH))+
geom_boxplot()+
theme_classic()+
ylab("Mean DBH")+
xlab("Forest Type")
ggarrange(abundance_plot, height_plot, dbh_plot, labels = "a", "b", "c")
ggarrange(abundance_plot, height_plot, dbh_plot, labels = c("a", "b", "c"))
abundance_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_violin()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
abundance_plot
abundance_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30, dbh <70 30)%>%
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70 30)%>%
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_m <- dummy_plots_all %>%
filter(dbh < 30& dbh <70)%>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_m <- dummy_plots_all %>%
filter(dbh  >=  30& dbh <70)%>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
abundance_lg
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n())
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_m = n())
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_lg = n())
abundance_lg
structure_all <- merge(structure_all, abundance_sm, by="Project_Plot")
structure_all <- merge(structure_all, abundance_m, by="Project_Plot")
structure_all <- merge(structure_all, abundance_lg, by="Project_Plot")
structure_all
anundance_dat <- structure_all %>%
select(abundance, abundance_sm, abundance_m, abundance_lg, Project_plot, Forest_Type)
structure_all
anundance_dat <- structure_all %>%
select(abundance, abundance_sm, abundance_m, abundance_lg, Project_plot, Forest_Type)
structure_all
anundance_dat <- structure_all %>%
select(abundance, abundance_sm, abundance_m, abundance_lg, Project_Plot, Forest_Type)
anundance_dat
anundance_dat <- structure_all %>%
select(abundance, abundance_sm, abundance_m, abundance_lg, Project_Plot, Forest_Type)%>%
pivot_longer(cols= abundance:abundance_lg, names_to = "Size Class")
anundance_dat
anundance_dat$`Size Class`[anundance_dat$`Size Class`=="abundance"] <- "All"
anundance_dat$`Size Class`[anundance_dat$`Size Class`=="abundance"] <- "All"
anundance_dat$`Size Class`[anundance_dat$`Size Class`=="abundance_sm"] <- "Small"
anundance_dat$`Size Class`[anundance_dat$`Size Class`=="abundance_m"] <- "Medium"
anundance_dat$`Size Class`[anundance_dat$`Size Class`=="abundance_mg"] <- "Large"
anundance_dat
abundance_dat <- structure_all %>%
select(abundance, abundance_sm, abundance_m, abundance_lg, Project_Plot, Forest_Type)%>%
pivot_longer(cols= abundance:abundance_lg, names_to = "Size Class")
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance"] <- "All"
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_sm"] <- "Small"
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_m"] <- "Medium"
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_mg"] <- "Large"
abundance_dat
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_bar()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_boxplot()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col()+
theme_classic()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position_dodge(0.5))+
theme_classic()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="didge")+
theme_classic()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_lg"] <- "Large"
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
?scale_color_discrete
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge", colour= clarity)+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer()
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge", colour= clarity)+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(colour= clarity)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(pallette=1)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=1)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=2)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=3)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=4)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=-4)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=5)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=10)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=20)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=11)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=12)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette=BrBG)
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette="BrBG")

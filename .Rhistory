names(dummy_plots_liana)[5]<- "height"
#visually explore data
ggplot(data = dummy_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = dummy_plots_trees, aes(x=height))+
geom_histogram()
summary(dummy_plots_trees)
unique(dummy_plots$Project_Plot)
dummy_plots_trees <- dummy_plots_trees[dummy_plots_trees$Project_Plot!="_",]
#for 6 plots
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
mean_agb = mean(AGBtree))
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all$Forest_Type <- dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all$Forest_Type <- c("DF", "DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","IF","IF","IF","IF","IF","IF")
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n())
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_m = n())
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_lg = n())
structure_all <- merge(structure_all, abundance_sm, by="Project_Plot")
structure_all <- merge(structure_all, abundance_m, by="Project_Plot")
structure_all <- merge(structure_all, abundance_lg, by="Project_Plot")
structure_all
dummy_plots
dim(dummy_plots)
colnames(dummy_plots)
dummy_plots$ID[dummy_plots$ID=="#N/A"] <- NA
dummy_plots$ID[dummy_plots$ID==""] <- NA
dummy_plots <- dummy_plots[!is.na(dummy_plots$ID),]
dummy_plots <- dummy_plots[dummy_plots$Height..meters. >= 1.5,]
#create df for just trees
dummy_plots_trees <- dummy_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_trees)[4]<- "dbh"
names(dummy_plots_trees)[5]<- "height"
#create liana data
dummy_plots_liana <- dummy_plots %>%
filter(Type_Field == "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_liana)[4]<- "dbh"
names(dummy_plots_liana)[5]<- "height"
#visually explore data
ggplot(data = dummy_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = dummy_plots_trees, aes(x=height))+
geom_histogram()
summary(dummy_plots_trees)
unique(dummy_plots$Project_Plot)
dummy_plots_trees <- dummy_plots_trees[dummy_plots_trees$Project_Plot!="_",]
#check working directory
getwd()
# load packages
pacman::p_load(ggplot2, knitr, BIOMASS, dplyr, data.table, gdata,
rvest, rlang, purrr, tidyverse, iNEXT, ggpubr)
#load data
dummy_plots <- read.csv("Data_USE_ME.csv")
bioclim_data <- read.csv("worldclim_bass.csv")
dim(dummy_plots)
colnames(dummy_plots)
dummy_plots$ID[dummy_plots$ID=="#N/A"] <- NA
dummy_plots$ID[dummy_plots$ID==""] <- NA
dummy_plots <- dummy_plots[!is.na(dummy_plots$ID),]
dummy_plots <- dummy_plots[dummy_plots$Height..meters. >= 1.5,]
#create df for just trees
dummy_plots_trees <- dummy_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_trees)[4]<- "dbh"
names(dummy_plots_trees)[5]<- "height"
#create liana data
dummy_plots_liana <- dummy_plots %>%
filter(Type_Field == "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_liana)[4]<- "dbh"
names(dummy_plots_liana)[5]<- "height"
ggplot(data = dummy_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = dummy_plots_trees, aes(x=height))+
geom_histogram()
summary(dummy_plots_trees)
unique(dummy_plots$Project_Plot)
dummy_plots_trees <- dummy_plots_trees[dummy_plots_trees$Project_Plot!="_",]
hplots <- unique(dummy_plots_trees$Project_Plot)
output <- list()
height_no <- dummy_plots_trees %>%
drop_na(height)%>%
group_by(Project_Plot)%>%
summarise(n_height=length(height))
Hcalc <- function(ddat, hdat, x){
print(x)
hmod <- data.frame(modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = NULL))
min_pick <- min(hmod$RSE, na.rm = T)
bm <- hmod$method[hmod$RSE == min_pick]
best_mod <- modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = bm)
predHt <- retrieveH(D = ddat$dbh, model = best_mod)
list(rsq = best_mod$R.squared, rse = best_mod$RSE, mod = best_mod$method,
H = predHt$H, dat = ddat)
}
all_hts <- lapply(1:length(unique(dummy_plots_trees$Project_Plot)), function(x) output[[x]] = Hcalc(ddat =
dummy_plots_trees[dummy_plots_trees$Project_Plot == hplots[[x]], ],
hdat = dummy_plots_trees[dummy_plots_trees$Project_Plot == hplots[[x]],],
x))
rsq <- unlist(lapply(all_hts, `[[`, "rsq"))
rse <- unlist(lapply(all_hts, `[[`, "rse"))
mod <- unlist(lapply(all_hts, `[[`, "mod"))
hts <- unlist(lapply(all_hts, `[[`, "H"))
data <- unlist(lapply(all_hts, `[[`, "dat"))
dummy_plots_trees2 <- data.frame(do.call("rbind", (lapply(all_hts, `[[`, "dat"))))
length(hts)
dummy_plots_trees2$H <- hts
# clean the ID
# At the species level, we leave them as separate species ?
dummy_plots_trees2$Species <-  dummy_plots_trees2$ID
dummy_plots_trees2 <- dummy_plots_trees2 %>% separate(ID, c("Genus", "Spp"))
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Species <- gsub(" ", "_", dummy_plots_trees2$Species)
#dummy_plots_trees3 <- dummy_plots_trees2[dummy_plots_trees2$Genus!="Liane",]
#get wood density
WdDen <- getWoodDensity(genus = dummy_plots_trees2$Genus,
species = dummy_plots_trees2$Species,
stand = dummy_plots_trees2$Project_Plot)
dummy_plots_trees2$meanWD <- WdDen$meanWD
dummy_plots_trees2$sdWD <- WdDen$sdWD
#calculate AGB for trees
dummy_plots_trees2$AGBtree <- computeAGB(D = dummy_plots_trees2$dbh, WD = dummy_plots_trees2$meanWD, H = dummy_plots_trees2$H)
#for 6 plots
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
mean_agb = mean(AGBtree))
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all$Forest_Type <- dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all$Forest_Type <- c("DF", "DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","IF","IF","IF","IF","IF","IF")
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n())
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_m = n())
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_lg = n())
structure_all <- merge(structure_all, abundance_sm, by="Project_Plot")
structure_all <- merge(structure_all, abundance_m, by="Project_Plot")
structure_all <- merge(structure_all, abundance_lg, by="Project_Plot")
structure_all
ggplot(data= dummy_plots_all, aes(x= height))%>%
geom_histogram()
dummy_plots_all
ggplot(data= dummy_plots_all, aes(x= height))+
geom_histogram()
ggplot(data= dummy_plots_all, aes(x= height))+
geom_histogram()+
theme_classic()
structure_all
hill_dat <- data.frame(xtabs(~Project_Plot + Genus, data = dummy_plots_trees2))
hill_dat2 <- hill_dat %>%
pivot_wider(names_from = "Genus", values_from = "Freq")
class(hill_dat2)
hill_dat2_list <- as.list(hill_dat2)
hill_dat3 <- hill_dat %>%
pivot_wider(names_from = "Project_Plot", values_from = "Freq")
hill_dat4 <- hill_dat3[-c(0,1)]
hill_dat4_list <- as.list(hill_dat4)
structure_all$Forest_Type[structure_all$Forest_Type=="DF"] <- "Defaunated"
structure_all$Forest_Type[structure_all$Forest_Type=="IF"] <- "Intact"
abundance_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= abundance))+
geom_boxplot()+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")
height_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= meanHeight))+
geom_boxplot()+
theme_classic()+
ylab("Mean Height")+
xlab("Forest Type")
dbh_plot <- ggplot(data=structure_all, aes(x= Forest_Type, y= meanDBH))+
geom_boxplot()+
theme_classic()+
ylab("Mean DBH")+
xlab("Forest Type")
ggarrange(abundance_plot, height_plot, dbh_plot, labels = c("a", "b", "c"))
#abundance by size class
abundance_dat <- structure_all %>%
select(abundance, abundance_sm, abundance_m, abundance_lg, Project_Plot, Forest_Type)%>%
pivot_longer(cols= abundance:abundance_lg, names_to = "Size Class")
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance"] <- "All"
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_sm"] <- "Small"
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_m"] <- "Medium"
abundance_dat$`Size Class`[abundance_dat$`Size Class`=="abundance_lg"] <- "Large"
ggplot(data=abundance_dat, aes(x= Forest_Type, y= value, fill=`Size Class`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance")+
xlab("Forest Type")+
scale_fill_brewer(palette="BrBG")
ggarrange(abundance_plot, height_plot, dbh_plot, labels = c("a", "b", "c"))
hill <- iNEXT(hill_dat4_list, q = c(0,1,2), datatype = "abundance")
dummy_plots_trees2
hill <- as.data.frame(hill[[3]])
hill2 <- hill %>%
select(Site, Diversity, Observed)%>%
pivot_wider(names_from = "Diversity", values_from = "Observed")
colnames(hill2)[1] <- "Project_Plot"
hill2
summary_stats <- merge(hill2, plot_abundance, by="Project_Plot")
colnames(summary_stats)[2] <- "Genus_Richness"
colnames(summary_stats)[3] <- "Shannon_Diversity"
colnames(summary_stats)[4] <- "Simpson_Diversity"
summary_stats
#for 6 plots
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
_agb = sum(AGBtree))
#for 6 plots
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
agb = sum(AGBtree))
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all$Forest_Type <- dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
# also calculate basal area
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all$Forest_Type <- c("DF", "DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","IF","IF","IF","IF","IF","IF")
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n())
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_m = n())
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_lg = n())
structure_all <- merge(structure_all, abundance_sm, by="Project_Plot")
structure_all <- merge(structure_all, abundance_m, by="Project_Plot")
structure_all <- merge(structure_all, abundance_lg, by="Project_Plot")
ggplot(data= dummy_plots_all, aes(x= height))+
geom_histogram()+
theme_classic()
summary_stats <- merge(hill2, plot_abundance, by="Project_Plot")
colnames(summary_stats)[2] <- "Genus_Richness"
colnames(summary_stats)[3] <- "Shannon_Diversity"
colnames(summary_stats)[4] <- "Simpson_Diversity"
summary_stats
knitr::opts_chunk$set(echo = TRUE)
#check working directory
getwd()
# load packages
pacman::p_load(ggplot2, knitr, BIOMASS, dplyr, data.table, gdata,
rvest, rlang, purrr, tidyverse, iNEXT, ggpubr)
#load data
dummy_plots <- read.csv("Data_USE_ME.csv")
bioclim_data <- read.csv("worldclim_bass.csv")
dim(dummy_plots)
colnames(dummy_plots)
dummy_plots$ID[dummy_plots$ID=="#N/A"] <- NA
dummy_plots$ID[dummy_plots$ID==""] <- NA
dummy_plots <- dummy_plots[!is.na(dummy_plots$ID),]
dummy_plots <- dummy_plots[dummy_plots$Height..meters. >= 1.5,]
#create df for just trees
dummy_plots_trees <- dummy_plots %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters., ID)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_trees)[4]<- "dbh"
names(dummy_plots_trees)[5]<- "height"
#create liana data
dummy_plots_liana <- dummy_plots %>%
filter(Type_Field == "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_liana)[4]<- "dbh"
names(dummy_plots_liana)[5]<- "height"
#visually explore data
ggplot(data = dummy_plots_trees, aes(x=dbh))+
geom_histogram()
ggplot(data = dummy_plots_trees, aes(x=height))+
geom_histogram()
summary(dummy_plots_trees)
unique(dummy_plots$Project_Plot)
dummy_plots_trees <- dummy_plots_trees[dummy_plots_trees$Project_Plot!="_",]
hplots <- unique(dummy_plots_trees$Project_Plot)
output <- list()
height_no <- dummy_plots_trees %>%
drop_na(height)%>%
group_by(Project_Plot)%>%
summarise(n_height=length(height))
Hcalc <- function(ddat, hdat, x){
print(x)
hmod <- data.frame(modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = NULL))
min_pick <- min(hmod$RSE, na.rm = T)
bm <- hmod$method[hmod$RSE == min_pick]
best_mod <- modelHD(D = hdat$dbh, H = hdat$height, useWeight = F, method = bm)
predHt <- retrieveH(D = ddat$dbh, model = best_mod)
list(rsq = best_mod$R.squared, rse = best_mod$RSE, mod = best_mod$method,
H = predHt$H, dat = ddat)
}
all_hts <- lapply(1:length(unique(dummy_plots_trees$Project_Plot)), function(x) output[[x]] = Hcalc(ddat =
dummy_plots_trees[dummy_plots_trees$Project_Plot == hplots[[x]], ],
hdat = dummy_plots_trees[dummy_plots_trees$Project_Plot == hplots[[x]],],
x))
rsq <- unlist(lapply(all_hts, `[[`, "rsq"))
rse <- unlist(lapply(all_hts, `[[`, "rse"))
mod <- unlist(lapply(all_hts, `[[`, "mod"))
hts <- unlist(lapply(all_hts, `[[`, "H"))
data <- unlist(lapply(all_hts, `[[`, "dat"))
dummy_plots_trees2 <- data.frame(do.call("rbind", (lapply(all_hts, `[[`, "dat"))))
length(hts)
dummy_plots_trees2$H <- hts
# clean the ID
# At the species level, we leave them as separate species ?
dummy_plots_trees2$Species <-  dummy_plots_trees2$ID
dummy_plots_trees2 <- dummy_plots_trees2 %>% separate(ID, c("Genus", "Spp"))
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="ECH"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="sp"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Genus[dummy_plots_trees2$Genus=="Morpho"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="1"] <- NA
dummy_plots_trees2$Species[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Spp[dummy_plots_trees2$Spp=="3"] <- NA
dummy_plots_trees2$Species <- gsub(" ", "_", dummy_plots_trees2$Species)
#dummy_plots_trees3 <- dummy_plots_trees2[dummy_plots_trees2$Genus!="Liane",]
#get wood density
WdDen <- getWoodDensity(genus = dummy_plots_trees2$Genus,
species = dummy_plots_trees2$Species,
stand = dummy_plots_trees2$Project_Plot)
dummy_plots_trees2$meanWD <- WdDen$meanWD
dummy_plots_trees2$sdWD <- WdDen$sdWD
#calculate AGB for trees
dummy_plots_trees2$AGBtree <- computeAGB(D = dummy_plots_trees2$dbh, WD = dummy_plots_trees2$meanWD, H = dummy_plots_trees2$H)
#for 6 plots
plot_abundance <- dummy_plots_trees2 %>%
group_by(Project_Plot)%>%
drop_na(dbh, H)%>%
dplyr::summarise(abundance = n(),
mean_dbh = mean(dbh),
mean_height = mean(H),
agb = sum(AGBtree))
#for all plots, where possible
dummy_plots_all <- read.csv("Data_USE_ME.csv")
dummy_plots_all$Forest_Type <- dummy_plots_all
dummy_plots_all<- dummy_plots_all %>%
filter(Type_Field != "Liana")%>%
select(Project, Plot, Grid, TAG_SUM, DBH..mm., Height..meters.)%>%
mutate(Project2 = Project)%>%
unite("Project_Plot", Project:Plot)
names(dummy_plots_all)[4]<- "dbh"
names(dummy_plots_all)[5]<- "height"
dummy_plots_all <- dummy_plots_all[dummy_plots_all$Project_Plot!="_",]
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n())
structure_all <- dummy_plots_all %>%
drop_na(dbh, height)%>%
group_by(Project_Plot)%>%
dplyr::summarise(meanDBH = mean(dbh),
meanHeight= mean(height))
# also calculate basal area
structure_all <- merge(structure_all, abundance_all, by="Project_Plot")
structure_all$Forest_Type <- c("DF", "DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","DF","IF","IF","IF","IF","IF","IF")
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n())
#only medium trees
abundance_m <- dummy_plots_all %>%
filter(dbh >= 30& dbh <70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_m = n())
#only lg trees
abundance_lg <- dummy_plots_all %>%
filter(dbh >70)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_lg = n())
structure_all <- merge(structure_all, abundance_sm, by="Project_Plot")
structure_all <- merge(structure_all, abundance_m, by="Project_Plot")
structure_all <- merge(structure_all, abundance_lg, by="Project_Plot")
ggplot(data= dummy_plots_all, aes(x= height))+
geom_histogram()+
theme_classic()
structure_all
dummy_plots_all
pi
dummy_plots_all$BA <- ((dummy_plots_all$dbh/2)^2)*pi
dummy_plots_all$BA <- ((dummy_plots_all$dbh/2)^2)*pi
dummy_plots_all
abundance_all <- dummy_plots_all %>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance = n(),
BA = sum(BA))
abundance_all

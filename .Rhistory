ownership <- webpage1 %>%
html_nodes("div+ table tr:nth-child(2) td:nth-child(4)") %>% html_text()
ownership
max.withdrawals.mgd <- webpage1 %>%
html_nodes("th~ td+ td") %>%  html_text()
max.withdrawals.mgd
#make scraped data frame
df1 <- data.frame(
"Water.system.name" = rep(water.system.name,12), #make column with 12 rows and 1 column for water syst name
"PSWID" = rep(the_pswid,12), #make PSWIP column with 12 rows with
"Ownership" = rep(ownership,12),
"Max.withdrawal.mgd" = as.numeric(max.withdrawals.mgd),
"Month" = c(1,5,9,2,6,10,3,7,11,4,8,12), #Telling R which month is which
"Year" = rep(the_year,12)) %>%
mutate(Date = my(paste(Month,"-",Year)))
df1
#create website variable
NCW_website <- read_html(paste0("https://www.ncwater.org/WUDC/app/LWSP/report.php?pwsid=",the_pswid, "&year=", the_year))
NCW_website
#create element variables - correct
water.system.name <- NCW_website %>%
html_nodes("div+ table tr:nth-child(1) td:nth-child(2)") %>% html_text()
water.system.name
pswid <- webpage1 %>%
html_nodes("td tr:nth-child(1) td:nth-child(5)") %>% html_text()
pswid
#6.
#Make function
NCW_scrape_fcn <- function(the_pswid,the_year){
#create website variable
NCW_website <- read_html(paste0("https://www.ncwater.org/WUDC/app/LWSP/report.php?pwsid=",the_pswid, "&year=", the_year))
#create element variables - correct
water.system.name <- NCW_website %>%
html_nodes("div+ table tr:nth-child(1) td:nth-child(2)") %>% html_text()
water.system.name
pswid <- NCW_website %>%
html_nodes("td tr:nth-child(1) td:nth-child(5)") %>% html_text()
pswid
ownership <- NCW_website %>%
html_nodes("div+ table tr:nth-child(2) td:nth-child(4)") %>% html_text()
ownership
max.withdrawals.mgd <- NCW_website %>%
html_nodes("th~ td+ td") %>%  html_text()
max.withdrawals.mgd
#scrape the data items
water.system.name <-NCW_website %>%
html_nodes("div+ table tr:nth-child(1) td:nth-child(2)") %>% html_text()
water.system.name
pswid <-NCW_website %>%
html_nodes("td tr:nth-child(1) td:nth-child(5)") %>% html_text()
pswid
ownership <- NCW_website %>%
html_nodes("div+ table tr:nth-child(2) td:nth-child(4)") %>% html_text()
ownership
max.withdrawals.mgd <- NCW_website %>%
html_nodes("th~ td+ td") %>%  html_text()
max.withdrawals.mgd
#make scraped data frame
df1 <- data.frame(
"Water.system.name" = rep(water.system.name,12), #make column with 12 rows and 1 column for water syst name
"PSWID" = rep(the_pswid,12), #make PSWIP column with 12 rows with
"Ownership" = rep(ownership,12),
"Max.withdrawal.mgd" = as.numeric(max.withdrawals.mgd),
"Month" = c(1,5,9,2,6,10,3,7,11,4,8,12), #Telling R which month is which
"Year" = rep(the_year,12)) %>%
mutate(Date = my(paste(Month,"-",Year)))
#return the data frama
return(df1)
}
#7
Durham_2015 <- NCW_scrape_fcn("03-32-010", 2015)
Durham_2015
#8
Asheville_2015 <- NCW_scrape_fcn("01-11-010", 2015)
Asheville_2015
#9
#Create the set of years
years = seq(2010,2018)
#using lapply
the_dfx <- lapply(
X=years,
FUN=scrape.it,
the_site= '01-11-010') %>%
bind_rows()
#Using purrr's map function
the_dfx <- years %>% map(scrape.it,the_site='01-11-010') %>% bind_rows()
#Plot
ggplot(the_dfx,aes(x=Date,y=Max.withdrawals.mgd) ) +
geom_line()+
geom_smooth(method="loess")
#1. Set up
getwd()
library(tidyverse)
library(rvest)
library(lubridate)
#2. Set the website
webpage <- read_html('https://www.ncwater.org/WUDC/app/LWSP/report.php?pwsid=03-32-010&year=2020')
#2. Set the website
webpage <- read_html('https://www.ncwater.org/WUDC/app/LWSP/report.php?pwsid=03-32-010&year=2020')
#3. Scrape the data
water.system.name <- webpage %>% html_nodes('div+ table tr:nth-child(1) td:nth-child(2)') %>% html_text()
pswid <- webpage %>% html_nodes('td tr:nth-child(1) td:nth-child(5)') %>% html_text()
ownership <- webpage %>% html_nodes('div+ table tr:nth-child(2) td:nth-child(4)') %>% html_text()
max.withdrawals.mgd <- webpage %>% html_nodes('th~ td+ td') %>% html_text()
#4
the_df <- data.frame(
"Water.system.name" = rep(water.system.name,12),
"PSWID" = rep(pswid,12),
"Ownership" = rep(ownership,12),
"Max.withdrawals.mgd" = as.numeric(max.withdrawals.mgd),
"Month" = c(1,5,9,2,6,10,3,7,11,4,8,12),
"Year"= 2019) %>%
mutate(Date = make_date(2019,Month)) %>%
arrange(Date)
#5
ggplot(the_df, ) +
geom_line(aes(x=Date,y=Max.withdrawals.mgd))
#6.
scrape.it <- function(the_site,the_year){
the_url <- paste0('https://www.ncwater.org/WUDC/app/LWSP/report.php?pwsid=',the_site,'&year=',the_year)
print(the_url)
webpage <- read_html(the_url)
#Scrape the data
water.system.name <- webpage %>% html_nodes('div+ table tr:nth-child(1) td:nth-child(2)') %>% html_text()
pswid <- webpage %>% html_nodes('td tr:nth-child(1) td:nth-child(5)') %>% html_text()
ownership <- webpage %>% html_nodes('div+ table tr:nth-child(2) td:nth-child(4)') %>% html_text()
max.withdrawals.mgd <- webpage %>% html_nodes('th~ td+ td') %>% html_text()
#Create dataframe
data.frame("Month"= c(1,5,9,2,6,10,3,7,11,4,8,12), "Year"=rep(2015, 12), max_with= as.numeric(max.withdrawals.mgd))
the_df <- data.frame(
"Water.system.name" = rep(water.system.name,12),
"PSWID" = rep(pswid,12),
"Ownership" = rep(ownership,12),
"Max.withdrawals.mgd" = as.numeric(max.withdrawals.mgd),
"Month" = c(1,5,9,2,6,10,3,7,11,4,8,12)) %>%
mutate(Date = make_date(the_year,Month)) %>%
arrange(Date)
#Return the dataframe
return(the_df)
}
#7
df_2015 <- scrape.it('03-32-010',2015)
ggplot(df_2015,aes(x=Date,y=Max.withdrawals.mgd) ) +
geom_col()
#8
df_2015_ashe <- scrape.it('01-11-010',2015)
df_all <- bind_rows(df_2015,df_2015_ashe)
ggplot(df_all,aes(x=Date,y=Max.withdrawals.mgd,fill=PSWID)) +
geom_col(position = "dodge")
#8
df_2015_ashe <- scrape.it('01-11-010',2015)
df_all <- bind_rows(df_2015,df_2015_ashe)
ggplot(df_all,aes(x=Date,y=Max.withdrawals.mgd,fill=PSWID)) +
geom_col(position = "dodge")
#9
#Create the set of years
years = seq(2010,2018)
#using lapply
the_dfx <- lapply(
X=years,
FUN=scrape.it,
the_site= '01-11-010') %>%
bind_rows()
#Using purrr's map function
the_dfx <- years %>% map(scrape.it,the_site='01-11-010') %>% bind_rows()
#Plot
ggplot(the_dfx,aes(x=Date,y=Max.withdrawals.mgd) ) +
geom_line()+
geom_smooth(method="loess")
#Plot
ggplot(the_dfx,aes(x=Date,y=Max.withdrawals.mgd) ) +
geom_line()+
geom_smooth(method="loess")
#Plot
ggplot(the_dfx,aes(x=Date,y=Max.withdrawals.mgd) ) +
geom_line()+
geom_smooth(method="loess")
basal_area <- ggplot(data=abundance_dat2, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(y = expression("Basal Area"~ "["~ m^2~"]"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))
basal_area <- ggplot(data=abundance_dat2, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "["~ m^2~"]"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))
basal_area
basal_area <- ggplot(data=abundance_dat2, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "("~ m^2~"/ Plot)"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))
basal_area
abundance <- ggplot(data=abundance_dat1, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))
basal_area <- ggplot(data=abundance_dat2, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "("~ m^2~")"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))
basal_area
Structure_plot <- ggarrange(abundance, basal_area, labels = c("a", "b"), common.legend = T)
Structure_plot
basal_area
Structure_plot
abundance_dat2
#only small trees
BA_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(BA_sm = sum(BA),
BA_sd = sd(BA))
BA_sm
abundance_sm_sd = sd(n())
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n(),
abundance_sm_sd = sd(n()))
abundance_sm
abundance_dat1
#only small trees
abundance_sm <- dummy_plots_all %>%
filter(dbh < 30)%>%
group_by(Project_Plot)%>%
dplyr::summarise(abundance_sm = n(),
abundance_sm_sd = sd(n()))
abundance_sm
abundance_dat1
abundance_dat1
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure)%>%
dplyr::summarise(sd = sd(value))
abundance_dat1_sd
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value))
abundance_dat1_sd
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass, .groups)%>%
dplyr::summarise(sd = sd(value))
abundance_dat1
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass, Project_Plot)%>%
dplyr::summarise(sd = sd(value))
abundance_dat1_sd
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value))
abundance_dat1_sd
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass)
abundance_dat1_sd
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value),
value= mean(value))
abundance_dat1_sd
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2)
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd))
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2)
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position="dodge")
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(2))
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(1))
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(0.9))
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(0.8))
abundance
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(0.85))
abundance
abundance_dat2_sd <- abundance_dat2 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value),
value= mean(value))
basal_area <- ggplot(data=abundance_dat2, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "("~ m^2~")"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(0.85))
basal_area
basal_area <- ggplot(data=abundance_dat2_ds, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "("~ m^2~")"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(0.85))
basal_area <- ggplot(data=abundance_dat2_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "("~ m^2~")"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = value-sd, ymax = value+sd), width = 0.2, position=position_dodge(0.85))
basal_area
abundance
abundance_dat2
abundance_dat2_sd <- abundance_dat2 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value),
value= mean(value))
abundance_dat2_sd
Structure_plot <- ggarrange(abundance, basal_area, labels = c("a", "b"), common.legend = T)
Structure_plot
abundance_dat1_sd <- abundance_dat1 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value),
value= mean(value),
n= n())%>%
mutate(se = sd / sqrt(n),
lower.ci = value - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = value + qt(1 - (0.05 / 2), n - 1) * se)
abundance_dat1_sd
abundance_dat2_sd <- abundance_dat2 %>%
group_by(`Forest Type`, Structure, SizeClass)%>%
dplyr::summarise(sd = sd(value),
value= mean(value),
n= n())%>%
mutate(se = sd / sqrt(n),
lower.ci = value - qt(1 - (0.05 / 2), n - 1) * se,
upper.ci = value + qt(1 - (0.05 / 2), n - 1) * se)
abundance_dat2
abundance_dat2_sd
c
abundance <- ggplot(data=abundance_dat1_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab("Abundance (Individuals)")+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = 0.2, position=position_dodge(0.85))
abundance
basal_area <- ggplot(data=abundance_dat2_sd, aes(x= SizeClass, y= value, fill=`Forest Type`))+
geom_col(position="dodge")+
theme_classic()+
ylab(expression("Basal Area"~ "("~ m^2~")"))+
xlab("Tree Size Class")+
scale_fill_manual(values = c("darkorange3","forestgreen"))+
geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width = 0.2, position=position_dodge(0.85))
basal_area
Structure_plot <- ggarrange(abundance, basal_area, labels = c("a", "b"), common.legend = T)
Structure_plot
structure_all
structure_all
height_plot <- ggplot(data=structure_all, aes(x=meanHeight))+
geom_bar()
height_plot
height_plot <- ggplot(data=structure_all, aes(y=meanHeight))+
geom_bar()
height_plot
structure_all
height_plot <- ggplot(data=structure_all, aes(y=meanHeight, x= "Forest_Type"))+
geom_bar()
height_plot
height_plot <- ggplot(data=structure_all, aes(y=meanHeight, x= Forest_Type))+
geom_bar()
height_plot
height_plot <- ggplot(data=structure_all, aes(y=meanHeight, x= Forest_Type))+
geom_box()
height_plot <- ggplot(data=structure_all, aes(y=meanHeight, x= Forest_Type))+
geom_boxplot()
height_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot()
height_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot()+
ylab("Mean Height (m)")+
xlab("Forest Type")
height_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot()+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color=black),
axis.text.y = element_text(color=black))
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot()+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color=black))
axis.text.y = element_text(color="black)")
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot()+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
height_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_violin()+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
height_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot()+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
height_plot
dbh_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanDBH))+
geom_boxplot()+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
dbh_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot(color = c("darkorange3","forestgreen"))+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
height_plot
height_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanHeight))+
geom_boxplot(fill = c("darkorange3","forestgreen"))+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
height_plot
dbh_plot <- ggplot(data=structure_all, aes( x= Forest_Type, y=meanDBH))+
geom_boxplot(fill = c("darkorange3","forestgreen"))+
ylab("Mean Height (m)")+
xlab("Forest Type")+
theme(axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"))
Structure_plot <- ggarrange(abundance, basal_area,height_plot, dbh_plot, labels = c("a", "b", "c", "d"), common.legend = T)
Structure_plot

knitr::opts_chunk$set(echo = TRUE)
<<<<<<< HEAD
getwd()
AGB.sp22.data.raw <- read.csv("Data_USE_ME.csv")
View(AGB.sp22.data.raw)
levels(AGB.sp22.data.raw$Plot)
groups(AGB.sp22.data.raw$Plot)
unique(AGB.sp22.data.raw$Plot)
unique(AGB.sp22.data.raw$Project)
unique(AGB.sp22.data.raw$Plot)
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B")
library(tidyverse)
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B")
View(AGB.sp22.data)
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B") %>%
filter(Project == "DF", Plot == "5A")
View(AGB.sp22.data)
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B" |
Project == "DF", Plot == "5A")
View(AGB.sp22.data)
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B" &
Project == "DF", Plot == "5A")
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B",
Project == "DF", Plot == "5A")
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF", Plot == "3B")
AGB.sp22.data <- AGB.sp22.data.raw %>%
filter(Project == "DF" & Plot == "3B")
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot")
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot")
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot == "DF_3B" & "DF_5A")
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot == "DF_3B", "DF_5A")
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot == 'DF_3B', 'DF_5A')
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot == DF_3B)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot == "DF_3B")
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot == "DF_3B", "DF_5A")
=======
library(tidyverse)
library(tidyverse)
#install.packages("janitor")
library(janitor)
#load data
AGB.sp22.data.raw <- read.csv("Data_USE_ME.csv")
clean.spp.list <- read.csv("clean_spp_list.csv") %>%
select(Species)
#exploring groups within project and plot columns
unique(AGB.sp22.data.raw$Project)
unique(AGB.sp22.data.raw$Plot)
#filter data for only our 6 plots
>>>>>>> 519c8c96978f394962b582c1a73f1e35281fc211
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A"))
#check row names of Proj.Plot
<<<<<<< HEAD
unique(AGB.sp22.data$Proj.Plot)
unique(AGB.sp22.data$ID)
spp.list <- unique(AGB.sp22.data$ID)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID))
View(spp.list)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(unique(AGB.sp22.data$ID) = ID)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename("unique(AGB.sp22.data$ID)" = ID)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(desc(ID))
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(desc())
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(desc(string))
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(desc(spp.list))
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(desc(spp.list$ID))
class(spp.list$ID)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(desc(ID))
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(c)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)")
arrange(ID)
spp.list <- as.data.frame(unique(AGB.sp22.data$ID)) %>%
rename(ID = "unique(AGB.sp22.data$ID)") %>%
arrange(ID)
View(spp.list)
clean.spp.list <- read.csv("clean_spp_list.csv")
ifelse(clean.spp.list %in% AGB.sp22.data$ID)
ifelse(clean.spp.list %in% AGB.sp22.data$ID,1,0)
AGB.sp22.data$Spp.match <- ifelse(clean.spp.list %in% AGB.sp22.data$ID,1,0)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
relocate("Spp.match", .after="ID")
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
relocate(23, .after=21)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
relocate("ID", "Spp.match")
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
select(1:21,23,22)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
select(c(1:21,23,22))
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
relocate(Spp.match, .after-ID)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0) %>%
select(c(1:21, 23,22))
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
unique(AGB.sp22.data$Spp.match)
View(clean.spp.list)
clean.spp.list <- read.csv("clean_spp_list.csv")
clean.spp.list <- clean.spp.list[c(,1)]
clean.spp.list <- clean.spp.list[,1]
clean.spp.list <- as.data.frame(clean.spp.list[,1])
clean.spp.list <- as.data.frame(clean.spp.list[c(,1)])
clean.spp.list <- as.data.frame(clean.spp.list[,1]
clean.spp.list <- read.csv("clean_spp_list.csv")
clean.spp.list <- read.csv("clean_spp_list.csv")
View(clean.spp.list)
clean.spp.list <- read.csv("clean_spp_list.csv") %>%
select(Species)
rm(spp.list)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
unique(AGB.sp22.data$Spp.match)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
unique(AGB.sp22.data$Spp.match)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A")) %>%
clean_names()
?clean_names
??clean_names
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A")) %>%
clean.names()
?clean.names
install.packages(janitor)
install.packages("janitor")
install.packages("janitor")
#install.packages("janitor")
library(janitor)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A")) %>%
clean_names()
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A")) %>%
clean_names(ID)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A")) %>%
clean_names(id)
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$id %in% clean.spp.list, 1,0)
unique(AGB.sp22.data$Spp.match)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A"))
unique(AGB.sp22.data$Proj.Plot) #only data for 6 plots in data frame
AGB.sp22.data.raw <- read.csv("Data_USE_ME.csv")
clean.spp.list <- read.csv("clean_spp_list.csv") %>%
select(Species)
=======
unique(AGB.sp22.data$Proj.Plot) #only data for 6 plots in data frame
#subset data
colnames(AGB.sp22.data)
AGB.sp22.data.subset <- AGB.sp22.data %>%
select(E, Date..dd.mm.yyyy..1,Proj.Plot,Grid, Plant_tag, X_coord, Y_coord, Tool, POM, DBH..mm., Height..meters.,Type_Field, Note_Field, ID, Treatment)
colnames(AGB.sp22.data.subset)
#column names
colnames(AGB.sp22.data.subset) = c("Data_Collection_Season", "Date", "Proj.Plot", "Grid", "TAG_SUM", "Plant_tag", "X_coord", "Y_Coord", "Tool", "POM", "DBH_mm", "Height_m", "Veg_Type", "Notes", "ID", "Treatment")
#column names
colnames(AGB.sp22.data.subset) = c("Data_Collection_Season", "Date", "Proj.Plot", "Grid", "Plant_tag", "X_coord", "Y_Coord", "Tool", "POM", "DBH_mm", "Height_m", "Veg_Type", "Notes", "ID", "Treatment")
View(AGB.sp22.data.subset)
#Check Date Column
class(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date <- as.Date(AGB.sp22.data.subset$Date,
format = "%d/%m/%Y")
class(AGB.sp22.data.subset$Date)
#Checking through columns
#Data_Collection_Season
unique(AGB.sp22.data.subset$Data_Collection_Season)
###QUESTION FOR VINCENT - what is the difference between Winter_2021 and Nov_Dec_2021? can you explain these data collection periods more?
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-01")] <- "2021-12-01"
#Checking through columns
#Data_Collection_Season
unique(AGB.sp22.data.subset$Data_Collection_Season)
#Dates
unique(AGB.sp22.data.subset$Date)
#Fixing Dates
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-01")] <- "2021-12-01"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-03")] <- "2021-12-03"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-02")] <- "2021-12-02"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-06")] <- "2021-12-06"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-05")] <- "2021-12-05"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-04")] <- "2021-12-04"
unique(AGB.sp22.data.subset$Date)
summary(AGB.sp22.data.subset$Date)
#Check Date Column
class(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date <- as.Date(AGB.sp22.data.subset$Date,
format = "%d/%m/%Y")
class(AGB.sp22.data.subset$Date)
#Dates
unique(AGB.sp22.data.subset$Date)
#Fixing Dates
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-01")] <- "2021-12-01"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-03")] <- "2021-12-03"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-02")] <- "2021-12-02"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-06")] <- "2021-12-06"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-05")] <- "2021-12-05"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("0021-12-04")] <- "2021-12-04"
unique(AGB.sp22.data.subset$Date)
#load data
AGB.sp22.data.raw <- read.csv("Data_USE_ME.csv")
clean.spp.list <- read.csv("clean_spp_list.csv") %>%
select(Species)
#exploring groups within project and plot columns
>>>>>>> 519c8c96978f394962b582c1a73f1e35281fc211
unique(AGB.sp22.data.raw$Project)
unique(AGB.sp22.data.raw$Plot)
#filter data for only our 6 plots
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A"))
#check row names of Proj.Plot
unique(AGB.sp22.data$Proj.Plot) #only data for 6 plots in data frame
<<<<<<< HEAD
#compare species ID in dataframe with reference species list. 1=match, 0=no match
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$id %in% clean.spp.list, 1,0)
#compare species ID in dataframe with reference species list. 1=match, 0=no match
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A")) %>%
clean_names()
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A"))
AGB.sp22.data.raw <- read.csv("Data_USE_ME.csv")
clean.spp.list <- read.csv("clean_spp_list.csv") %>%
select(Species)
=======
#subset data
colnames(AGB.sp22.data)
AGB.sp22.data.subset <- AGB.sp22.data %>%
select(E, Date..dd.mm.yyyy..1,Proj.Plot,Grid, Plant_tag, X_coord, Y_coord, Tool, POM, DBH..mm., Height..meters.,Type_Field, Note_Field, ID, Treatment)
#column names
colnames(AGB.sp22.data.subset) = c("Data_Collection_Season", "Date", "Proj.Plot", "Grid", "Plant_tag", "X_coord", "Y_Coord", "Tool", "POM", "DBH_mm", "Height_m", "Veg_Type", "Notes", "ID", "Treatment")
#Check Date Column
class(AGB.sp22.data.subset$Date)
unique(AGB.sp22.data.subset$Date)
#Check Date Column
class(AGB.sp22.data.subset$Date)
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/13/21")] <- "13/3/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/14/21")] <- "14/3/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/15/21")] <- "15/3/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/16/21")] <- "16/3/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("1/12/21")] <- "1/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/12/21")] <- "3/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("2/12/21")] <- "2/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("6/12/21")] <- "6/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("5/12/21")] <- "5/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("4/12/21")] <- "4/12/2021"
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/13/21")] <- "13/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/14/21")] <- "14/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/15/21")] <- "15/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/16/21")] <- "16/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("1/12/21")] <- "1/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/12/21")] <- "3/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("2/12/21")] <- "2/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("6/12/21")] <- "6/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("5/12/21")] <- "5/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("4/12/21")] <- "4/12/2021"
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/14/21")] <- "14/03/2021"
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date <- as.Date(AGB.sp22.data.subset$Date,
format = "%d/%m/%Y")
class(AGB.sp22.data.subset$Date)
unique(AGB.sp22.data.subset$Date)
#Checking through columns
#Data_Collection_Season
unique(AGB.sp22.data.subset$Data_Collection_Season)
summary(AGB.sp22.data.subset$Date)
#Data_Collection_Season
unique(AGB.sp22.data.subset$Data_Collection_Season)
#Grid
unique(AGB.sp22.data.subset$Grid)
#Found H7/J8 which is wrong
class(AGB.sp22.data.subset$Grid)
sum(AGB.sp22.data.subset$Grid == "H7/J8")
AGB.sp22.data.subset$Grid[AGB.sp22.data.subset$Grid %in% c("H7/J8")] <- "H7/I8"
colnames()
colnames(AGB.sp22.data.subset)
#Plant_tag
unique(AGB.sp22.data.subset$Plant_tag)
AGB.sp22.data.subset[AGB.sp22.data.subset$Plant_tag %in% n_occur$Var1[n_occur$Freq > 1],]
AGB.sp22.data.subset[AGB.sp22.data.subset$Plant_tag %in% AGB.sp22.data.subset$Plant_tag[Plant_Tag$Freq > 1],]
Plant_tag_duplicates <- AGB.sp22.data.subset %>% group_by(Plant_tag) %>% summarise(n=sum(n())) %>% filter(n>1)
View(Plant_tag_duplicates)
View(AGB.sp22.data.subset)
AGB.sp22.data.subset <- AGB.sp22.data.subset %>%
unite("TAG_NUM_2", Proj.Plot:Grid:Plant_tag)
#load data
AGB.sp22.data.raw <- read.csv("Data_USE_ME.csv")
clean.spp.list <- read.csv("clean_spp_list.csv") %>%
select(Species)
#exploring groups within project and plot columns
>>>>>>> 519c8c96978f394962b582c1a73f1e35281fc211
unique(AGB.sp22.data.raw$Project)
unique(AGB.sp22.data.raw$Plot)
#filter data for only our 6 plots
AGB.sp22.data <- AGB.sp22.data.raw %>%
unite("Proj.Plot", Project:Plot, remove=F) %>%
filter(Proj.Plot %in% c("DF_3B", "DF_5A", "DF_5B", "DF_6A", "DF_6B", "IF_2A"))
#check row names of Proj.Plot
unique(AGB.sp22.data$Proj.Plot) #only data for 6 plots in data frame
<<<<<<< HEAD
#compare species ID in dataframe with reference species list. 1=match, 0=no match
AGB.sp22.data$Spp.match <- ifelse(AGB.sp22.data$ID %in% clean.spp.list, 1,0)
=======
#subset data
colnames(AGB.sp22.data)
AGB.sp22.data.subset <- AGB.sp22.data %>%
select(E, Date..dd.mm.yyyy..1,Proj.Plot,Grid, Plant_tag, X_coord, Y_coord, Tool, POM, DBH..mm., Height..meters.,Type_Field, Note_Field, ID, Treatment)
colnames(AGB.sp22.data.subset)
#column names
colnames(AGB.sp22.data.subset) = c("Data_Collection_Season", "Date", "Proj.Plot", "Grid", "Plant_tag", "X_coord", "Y_Coord", "Tool", "POM", "DBH_mm", "Height_m", "Veg_Type", "Notes", "ID", "Treatment")
#Check Date Column
class(AGB.sp22.data.subset$Date)
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/13/21")] <- "13/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/14/21")] <- "14/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/15/21")] <- "15/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/16/21")] <- "16/03/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("1/12/21")] <- "1/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("3/12/21")] <- "3/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("2/12/21")] <- "2/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("6/12/21")] <- "6/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("5/12/21")] <- "5/12/2021"
AGB.sp22.data.subset$Date[AGB.sp22.data.subset$Date %in% c("4/12/21")] <- "4/12/2021"
unique(AGB.sp22.data.subset$Date)
AGB.sp22.data.subset$Date <- as.Date(AGB.sp22.data.subset$Date,
format = "%d/%m/%Y")
class(AGB.sp22.data.subset$Date)
unique(AGB.sp22.data.subset$Date)
summary(AGB.sp22.data.subset$Date)
#Data_Collection_Season
unique(AGB.sp22.data.subset$Data_Collection_Season)
#Grid
unique(AGB.sp22.data.subset$Grid)
#Found H7/J8 which is wrong
class(AGB.sp22.data.subset$Grid)
sum(AGB.sp22.data.subset$Grid == "H7/J8")
AGB.sp22.data.subset$Grid[AGB.sp22.data.subset$Grid %in% c("H7/J8")] <- "H7/I8"
#Plant_tag
unique(AGB.sp22.data.subset$Plant_tag)
AGB.sp22.data.subset <- AGB.sp22.data.subset %>%
mutate(TAG_NUM_2 = unite("TAG_NUM_2", Proj.Plot:Grid:Plant_tag))
TAG_NUM_ID <- AGB.sp22.data.subset %>%
unite("TAG_NUM_2", Proj.Plot:Grid:Plant_tag)
View(TAG_NUM_ID)
TAG_NUM_ID <- AGB.sp22.data.subset %>%
select(Proj.Plot, Grid, Plant_tag) %>%
unite("TAG_NUM_2", Proj.Plot:Grid:Plant_tag)
View(TAG_NUM_ID)
Plant_tag_duplicates <- TAG_NUM_ID %>% group_by(TAG_NUM_2) %>% summarise(n=sum(n())) %>% filter(n>1)
View(Plant_tag_duplicates)
#X_coord
summary(AGB.sp22.data.subset$X_coord)
#Looks ok weird that it goes above 5m, but ok
#why 77 NAs?
which(is.na(AGB.sp22.data.subset$X_coord), arr.ind=TRUE)
#Y_coord
summary(AGB.sp22.data.subset$Y_Coord)
#Looks weirder max at 7...?
which(is.na(AGB.sp22.data.subset$Y_Coord, arr.ind = TRUE))
#Y_coord
summary(AGB.sp22.data.subset$Y_Coord)
#Y_coord
summary(AGB.sp22.data.subset$Y_Coord)
#column names
colnames(AGB.sp22.data.subset) = c("Data_Collection_Season", "Date", "Proj.Plot", "Grid", "Plant_tag", "X_Coord", "Y_Coord", "Tool", "POM", "DBH_mm", "Height_m", "Veg_Type", "Notes", "ID", "Treatment")
#X_coord
summary(AGB.sp22.data.subset$X_Coord)
#Looks ok weird that it goes above 5m, but ok
#why 77 NAs?
which(is.na(AGB.sp22.data.subset$X_Coord), arr.ind=TRUE)
#Looks weirder max at 7...?
which(is.na(AGB.sp22.data.subset$Y_Coord), arr.ind=TRUE)
#Y_coord
summary(AGB.sp22.data.subset$Y_Coord)
which(AGB.sp22.data.subset$Y_Coord > "5.0")
#80 NAs
which(is.na(AGB.sp22.data.subset$Y_Coord), arr.ind=TRUE)
#Tool
unique(AGB.sp22.data.subset$Tool)
which(AGB.sp22.data.subset$Tool == "")
sum(AGB.sp22.data.subset$Tool == "")
#POM
summary(AGB.sp22.data.subset$POM)
#DBH_mm
summary(AGB.sp22.data.subset$)
#DBH_mm
summary(AGB.sp22.data.subset$DBH_mm)
#Height_mm
summary(AGB.sp22.data.subset$Height_m)
#DBH_mm
summary(AGB.sp22.data.subset$DBH_mm)
#Height_mm
summary(AGB.sp22.data.subset$Height_m)
#NAs ok can make model
sum(AGB.sp22.data.subset$Height_m < "1.5")
#NAs ok can make model
sum(AGB.sp22.data.subset$Height_m < '1.5)
#NAs ok can make model
sum(AGB.sp22.data.subset$Height_m < '1.5')
#NAs ok can make model
sum(AGB.sp22.data.subset$Height_m < '1.5')
#NAs ok can make model
sum(AGB.sp22.data.subset$Height_m < "1.50")
#NAs ok can make model
sum(AGB.sp22.data.subset$Height_m)
#NAs ok can make model
count(AGB.sp22.data.subset$Height_m < "1.5")
#NAs ok can make model
length(AGB.sp22.data.subset$Height_m > "1.5")
#NAs ok can make model
class(AGB.sp22.data.subset$Height_m)
sum(AGB.sp22.data.subset$Height_m > 1.5)
nrow(AGB.sp22.data.subset[AGB.sp22.data.subset$Height_m <1.5,])
#Veg_Type
unique(AGB.sp22.data.subset$Veg_Type)
AGB.sp22.data.subset$Veg_Type[AGB.sp22.data.subset$Veg_Type %in% c("tree","TREE")] <- "Tree"
#Veg_Type
unique(AGB.sp22.data.subset$Veg_Type)
#Notes
unique(AGB.sp22.data.subset$Notes)
#Treatment
unique(AGB.sp22.data.subset$Treatment)
unique(AGB.sp22.data.subset$ID)
sort(unique(AGB.sp22.data.subset$ID))
AGB.sp22.data.subset$ID[AGB.sp22.data.subset$ID %in% c("Afrostyrax lepidophloeus")] <- "Afrostyrax lepidophyllus"
sort(unique(AGB.sp22.data.subset$ID))
AGB.sp22.data.subset$ID[AGB.sp22.data.subset$ID %in% c("Agellae paradoxa")] <- "Agelaea paradoxa"
>>>>>>> 519c8c96978f394962b582c1a73f1e35281fc211
